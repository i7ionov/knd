# Generated by Django 2.1.4 on 2018-12-18 04:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=100, verbose_name='Район')),
                ('place', models.CharField(max_length=100, verbose_name='Муниципальное образование')),
                ('city', models.CharField(max_length=100, verbose_name='Населенный пункт')),
                ('city_weight', models.IntegerField(default=100)),
                ('street', models.CharField(max_length=100, verbose_name='Улица')),
            ],
            options={
                'verbose_name': 'Адрес',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=500, null=True)),
                ('article_type', models.CharField(default='', max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Статья',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_number', models.CharField(max_length=500, verbose_name='номер документа')),
                ('doc_date', models.DateField(verbose_name='дата документа')),
                ('doc_type', models.CharField(default='', max_length=500, null=True, verbose_name='тип документа')),
                ('root_id', models.IntegerField(default=0, editable=False, verbose_name='root_id')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name': 'Документ',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('path', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'Файл',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDocument',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('doc_number', models.CharField(max_length=500, verbose_name='номер документа')),
                ('doc_date', models.DateField(verbose_name='дата документа')),
                ('doc_type', models.CharField(default='', max_length=500, null=True, verbose_name='тип документа')),
                ('root_id', models.IntegerField(default=0, editable=False, verbose_name='root_id')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Документ',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHouse',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('number', models.CharField(max_length=100, verbose_name='Номер дома')),
                ('comment', models.CharField(max_length=1000, null=True)),
                ('guid', models.CharField(max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('address', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dictionaries.Address')),
            ],
            options={
                'verbose_name': 'historical Дом',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrganization',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование организации')),
                ('inn', models.CharField(max_length=50, null=True, verbose_name='ИНН')),
                ('ogrn', models.CharField(max_length=50, null=True, verbose_name='ОГРН')),
                ('is_bankrupt', models.BooleanField(default=False, verbose_name='Банкрот')),
                ('kpp', models.CharField(max_length=50, null=True, verbose_name='КПП')),
                ('location_address', models.CharField(max_length=500, null=True, verbose_name='Адрес места нахождения')),
                ('telephone', models.CharField(max_length=50, null=True, verbose_name='Телефон')),
                ('email', models.CharField(max_length=50, null=True, verbose_name='Эл. почта')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Организация',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=100, verbose_name='Номер дома')),
                ('comment', models.CharField(max_length=1000, null=True)),
                ('guid', models.CharField(max_length=100, null=True)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dictionaries.Address', verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Дом',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование организации')),
                ('inn', models.CharField(max_length=50, null=True, verbose_name='ИНН')),
                ('ogrn', models.CharField(max_length=50, null=True, verbose_name='ОГРН')),
                ('is_bankrupt', models.BooleanField(default=False, verbose_name='Банкрот')),
                ('kpp', models.CharField(max_length=50, null=True, verbose_name='КПП')),
                ('location_address', models.CharField(max_length=500, null=True, verbose_name='Адрес места нахождения')),
                ('telephone', models.CharField(max_length=50, null=True, verbose_name='Телефон')),
                ('email', models.CharField(max_length=50, null=True, verbose_name='Эл. почта')),
            ],
            options={
                'verbose_name': 'Организация',
            },
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Recipient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=500, verbose_name='емейл')),
                ('group', models.CharField(max_length=500, verbose_name='группа')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='ФИО')),
                ('name_rp', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=200)),
                ('position_rp', models.CharField(max_length=200)),
                ('department', models.CharField(max_length=200)),
                ('department_rp', models.CharField(max_length=200)),
                ('django_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Сотрудник',
            },
        ),
        migrations.CreateModel(
            name='WorkingDays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(default='2017-01-01')),
            ],
        ),
        migrations.AddField(
            model_name='organization',
            name='org_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dictionaries.OrganizationType', verbose_name='Тип организации'),
        ),
        migrations.AddField(
            model_name='house',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dictionaries.Organization', verbose_name='Организация'),
        ),
        migrations.AddField(
            model_name='historicalorganization',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalorganization',
            name='org_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dictionaries.OrganizationType'),
        ),
        migrations.AddField(
            model_name='historicalhouse',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalhouse',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dictionaries.Organization'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dictionaries.Organization'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dictionaries.Document'),
        ),
        migrations.AddField(
            model_name='document',
            name='files',
            field=models.ManyToManyField(to='dictionaries.File', verbose_name='файлы'),
        ),
        migrations.AddField(
            model_name='document',
            name='houses',
            field=models.ManyToManyField(to='dictionaries.House', verbose_name='адреса домов'),
        ),
        migrations.AddField(
            model_name='document',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dictionaries.Organization', verbose_name='Организация'),
        ),
        migrations.AddField(
            model_name='document',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='dictionaries.Document'),
        ),
    ]
