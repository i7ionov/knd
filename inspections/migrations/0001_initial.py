# Generated by Django 2.1.4 on 2018-12-18 04:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dictionaries', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cancellation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ControlForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ControlKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ControlPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalInspection',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('doc_number', models.CharField(max_length=500, verbose_name='номер документа')),
                ('doc_date', models.DateField(verbose_name='дата документа')),
                ('doc_type', models.CharField(default='', max_length=500, null=True, verbose_name='тип документа')),
                ('root_id', models.IntegerField(default=0, editable=False, verbose_name='root_id')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('date_begin', models.DateField(null=True, verbose_name='начало проведения проверки')),
                ('date_end', models.DateField(null=True, verbose_name='окончание проведения проверки')),
                ('comment', models.TextField(default='', verbose_name='комментарий')),
                ('gis_gkh_number', models.TextField(default='', verbose_name='номер в ГИС ЖКХ')),
                ('erp_number', models.TextField(default='', verbose_name='номер в EРП')),
                ('act_date', models.DateField(null=True, verbose_name='дата акта')),
                ('violations_quantity', models.IntegerField(default=0, verbose_name='количество нарушений')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cancellation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inspections.Cancellation')),
                ('control_form', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inspections.ControlForm')),
                ('control_kind', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inspections.ControlKind')),
                ('control_plan', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inspections.ControlPlan')),
            ],
            options={
                'verbose_name': 'historical Проверка',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrder',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('doc_number', models.CharField(max_length=500, verbose_name='номер документа')),
                ('doc_date', models.DateField(verbose_name='дата документа')),
                ('doc_type', models.CharField(default='', max_length=500, null=True, verbose_name='тип документа')),
                ('root_id', models.IntegerField(default=0, editable=False, verbose_name='root_id')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('order_begin_date', models.DateField(null=True, verbose_name='дата начала исполнения предписания')),
                ('order_end_date', models.DateField(null=True, verbose_name='дата окончания исполнения предписания')),
                ('prolongation_date', models.DateField(null=True, verbose_name='дата окончания исполнения предписания с продлением')),
                ('comment', models.TextField(default='')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Предписание',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('document_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dictionaries.Document')),
                ('date_begin', models.DateField(null=True, verbose_name='начало проведения проверки')),
                ('date_end', models.DateField(null=True, verbose_name='окончание проведения проверки')),
                ('comment', models.TextField(default='', verbose_name='комментарий')),
                ('gis_gkh_number', models.TextField(default='', verbose_name='номер в ГИС ЖКХ')),
                ('erp_number', models.TextField(default='', verbose_name='номер в EРП')),
                ('act_date', models.DateField(null=True, verbose_name='дата акта')),
                ('violations_quantity', models.IntegerField(default=0, verbose_name='количество нарушений')),
                ('cancellation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inspections.Cancellation', verbose_name='Информация об отмене результатов проверки')),
                ('control_form', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inspections.ControlForm', verbose_name='форма проверки')),
                ('control_kind', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inspections.ControlKind', verbose_name='вид контроля')),
                ('control_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inspections.ControlPlan', verbose_name='вид проверки')),
            ],
            options={
                'verbose_name': 'Проверка',
            },
            bases=('dictionaries.document',),
        ),
        migrations.CreateModel(
            name='InspectionResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InspectionSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InspectionTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LegalBasis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('document_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dictionaries.Document')),
                ('order_begin_date', models.DateField(null=True, verbose_name='дата начала исполнения предписания')),
                ('order_end_date', models.DateField(null=True, verbose_name='дата окончания исполнения предписания')),
                ('prolongation_date', models.DateField(null=True, verbose_name='дата окончания исполнения предписания с продлением')),
                ('comment', models.TextField(default='')),
            ],
            options={
                'verbose_name': 'Предписание',
            },
            bases=('dictionaries.document',),
        ),
        migrations.CreateModel(
            name='OrderResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ViolationInInspection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0, verbose_name='количество нарушений')),
                ('inspection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inspections.Inspection', verbose_name='проверка')),
            ],
        ),
        migrations.CreateModel(
            name='ViolationInOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_to_remove', models.IntegerField(default=0, verbose_name='количество нарушений к устранению')),
                ('count_of_removed', models.IntegerField(default=0, verbose_name='количество нарушений по факту устранено')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inspections.Order', verbose_name='предписание')),
            ],
        ),
        migrations.CreateModel(
            name='ViolationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, verbose_name='Текст нарушения')),
                ('is_vagrant', models.BooleanField(default=False, verbose_name='Грубое нарушение')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='inspections.ViolationType')),
            ],
            options={
                'verbose_name': 'Нарушение',
            },
        ),
        migrations.AddField(
            model_name='violationinorder',
            name='violation_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inspections.ViolationType', verbose_name='тип нарушения'),
        ),
        migrations.AddField(
            model_name='violationininspection',
            name='violation_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inspections.ViolationType', verbose_name='тип нарушения'),
        ),
        migrations.AddField(
            model_name='order',
            name='order_result',
            field=models.ForeignKey(default='1', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inspections.OrderResult', verbose_name='результат предписания'),
        ),
        migrations.AddField(
            model_name='inspection',
            name='inspection_result',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inspections.InspectionResult', verbose_name='причина непроведения проверки'),
        ),
        migrations.AddField(
            model_name='inspection',
            name='inspection_subjects',
            field=models.ManyToManyField(to='inspections.InspectionSubject', verbose_name='предмет проверки'),
        ),
        migrations.AddField(
            model_name='inspection',
            name='inspection_tasks',
            field=models.ManyToManyField(to='inspections.InspectionTask', verbose_name='задачи проверки'),
        ),
        migrations.AddField(
            model_name='inspection',
            name='inspector',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dictionaries.User', verbose_name='инспектор'),
        ),
        migrations.AddField(
            model_name='inspection',
            name='legal_basis',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inspections.LegalBasis', verbose_name='основание для проверки'),
        ),
        migrations.AddField(
            model_name='historicalorder',
            name='document_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dictionaries.Document'),
        ),
        migrations.AddField(
            model_name='historicalorder',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalorder',
            name='order_result',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inspections.OrderResult'),
        ),
        migrations.AddField(
            model_name='historicalorder',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dictionaries.Organization'),
        ),
        migrations.AddField(
            model_name='historicalorder',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dictionaries.Document'),
        ),
        migrations.AddField(
            model_name='historicalinspection',
            name='document_ptr',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dictionaries.Document'),
        ),
        migrations.AddField(
            model_name='historicalinspection',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalinspection',
            name='inspection_result',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inspections.InspectionResult'),
        ),
        migrations.AddField(
            model_name='historicalinspection',
            name='inspector',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dictionaries.User'),
        ),
        migrations.AddField(
            model_name='historicalinspection',
            name='legal_basis',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inspections.LegalBasis'),
        ),
        migrations.AddField(
            model_name='historicalinspection',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dictionaries.Organization'),
        ),
        migrations.AddField(
            model_name='historicalinspection',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='dictionaries.Document'),
        ),
    ]
